<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sps-logger="http://www.mulesoft.org/schema/mule/sps-logger" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sps-logger http://www.mulesoft.org/schema/mule/sps-logger/current/mule-sps-logger.xsd">
	<sub-flow name="impl-get-artists" doc:id="033ae2d3-f0d2-4fcd-9d84-bcaf76f9392b" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="c54cb3a5-80a2-470c-8683-993ea73702d5" config-ref="SPS_Logger_Config" eventName="START" message="#['impl-get-artists::START::payload: '  ++ write(payload, 'application/json')]" correlationId="#[vars.headerAttributes.correlationId]" category="${logcat}"/>
		<flow-ref doc:name="sr-build-query-param-list" doc:id="c10a8cdd-9ddb-4650-ab53-e027cddfb856" name="sr-build-query-param-list" target="queryParamList"/>
		<sps-logger:sps-logger doc:name="Select Artists" doc:id="419b17c2-2c6d-4cdf-982a-ee8532a1ec6e" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-artists::payload: '  ++ write(payload, 'application/json')]" category="${logcat}"/>
		<flow-ref doc:name="sr-select-artists" doc:id="a6240bc0-916c-43fc-9376-d3d4e8a6b415" name="sr-select-artists"/>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="4a4a624d-2d8a-42ac-ba60-a980e52d01fd" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-get-artists::END::payload: '  ++ write(payload, 'application/json')]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-select-artists" doc:id="aed663ca-18e1-4156-8eab-dadcd35a9304" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="22f02113-eadd-439d-a84f-b02461abf4fd" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-select-artists::START::payload: ' ++ write(payload, 'application/json')]" category="${logcat}"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;(&quot;1=1&quot; &#10;    ++ (if(vars.queryParamList.lastName != null) &quot; AND lower(last_nm) LIKE concat(lower(:lastName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.firstName != null) &quot; AND lower(first_nm) LIKE concat(lower(:firstName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.groupName != null) &quot; AND lower(group_nm) LIKE concat(lower(:groupName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.dateOfBirth != null) &quot; AND birth_date = :dateOfBirth&quot; else &quot;&quot;)&#10;) as String]" doc:name="whereClause" doc:id="7358f40f-c656-4b52-9693-dde4336d455f" variableName="whereClause"/>
		<sps-logger:sps-logger doc:name="Where Clause" doc:id="cf774f4c-c861-46d0-9e9b-33d960ae02f2" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-select-artists::VAR::whereClause: ' ++ write(vars.whereClause,'application/json')]" category="${logcat}"/>
		<db:select doc:name="Select artist" doc:id="ef34618a-2fd2-4d86-a592-06bc6d1f0983" config-ref="mysql-config">
			<db:sql><![CDATA[#["SELECT artist_id, group_nm, first_nm, last_nm, birth_date, mi, death_date 	
    FROM bc_artist 
	  WHERE $(vars.whereClause)"]]]></db:sql>
			<db:input-parameters><![CDATA[#[vars.queryParamList]]]></db:input-parameters>
		</db:select>
		<sps-logger:sps-logger doc:name="Select Artist" doc:id="cbf00091-8689-48b1-8c4b-d0e108b6a185" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-select-artists::Select::payload: ' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
		<ee:transform doc:name="Transform Message" doc:id="d0c09a23-558e-4e24-a4be-f0d38da36e4e">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	statusCode: p('http.get.status.ok'),
	message: p('http.get.message.ok'),
	searchCriteria: ("[" 
		++ (if(vars.queryParamList.lastName != null) "lastName: '$(vars.queryParamList.lastName)', " else "")
		++ (if(vars.queryParamList.firstName != null) "firstName: '$(vars.queryParamList.firstName)', " else "")
		++ (if(vars.queryParamList.groupName != null) "groupName: '$(vars.queryParamList.groupName)', " else "")
		++ (if(vars.queryParamList.dateOfBirth != null) "birthDate: '$(vars.queryParamList.dateOfBirth)', " else "")
		++ "]"
	),
	artists: payload map ( artist ) -> {
		artistId: artist.artist_id,
		groupName: artist.group_nm default "",
		lastName: artist.last_nm default "",
		firstName: artist.first_nm default "",
		mi: artist.mi default "",
		dateOfBirth: artist.birth_date as String {format: "yyyy-MM-dd"} default "",
		(if(artist.death_date != null)(dateOfDeath: artist.death_date as String {format: "yyyy-MM-dd"} default "") else dateOfDeath: "")
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="f0b98b3b-eba9-4eeb-a0b9-4d320dc05758" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-select-artists::END::payload: ' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-build-query-param-list" doc:id="52b23396-d3e2-4db8-95ff-5b65c6df63a8" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="8b1f4572-4590-4c49-9190-fbf7f819ccc9" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-build-query-param-list::START::payload: ' ++ write(payload,'application/json')]" category="${logcat}"/>
		<ee:transform doc:name="queryParams" doc:id="76047f73-38f8-41f8-a19f-bcc3a23255fa" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	firstName: attributes.queryParams.firstName,
	lastName: attributes.queryParams.lastName,
	dateOfBirth: attributes.queryParams.dateOfBirth,
	groupName: attributes.queryParams.groupName
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="17fab7df-925f-4e5a-b396-9d98d74924b7" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-build-query-param-list::END::payload: ' ++ write(payload, 'application/json')]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="impl-add-artists" doc:id="6a765d80-a202-402d-a5ad-58393d5d16cf" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="da858acc-c4ec-44f7-be9c-998e9221cdbc" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::START::payload: '  ++ write(payload,'application/json')]" category="${logcat}" />
		<ee:transform doc:name="artists, artistsOut, artistsFound" doc:id="86b6605f-cb09-426f-8c95-fbd0537c8ea4" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="artistsOut" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artistsFound" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artists" ><![CDATA[%dw 2.0
output application/json
---
payload.artists]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<sps-logger:sps-logger doc:name="Artists" doc:id="52f69397-571b-4834-b523-c6c1e041e2fc" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::payload: '  ++ write(payload,'application/json')]" category="${logcat}"/>
		<foreach doc:name="For Each Artist" doc:id="aa0d7caa-b5b2-49a3-959e-9299523701d4" collection="#[vars.artists]">
			<sps-logger:sps-logger doc:name="Artist" doc:id="fc8e3050-b2bd-4ca5-bb4d-fdaecc122da5" config-ref="SPS_Logger_Config" eventName="BEFORE TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEach::payload: '  ++ write(payload,'application/json')]" category="${logcat}"/>
			<set-payload value='#[output application/json&#10;---&#10;{&#10;	artist: {&#10;		artistId: payload.artistId,&#10;		groupName: payload.groupName,&#10;		lastName: payload.lastName,&#10;		firstName: payload.firstName,&#10;		mi: payload.mi,&#10;		dateOfBirth: payload.dateOfBirth ,&#10;		dateOfDeath: payload.dateOfDeath&#10;	}&#10;}]' doc:name="artist" doc:id="a7453b67-2beb-4bec-b0c8-a3843033efa4" />
			<sps-logger:sps-logger doc:name="Modified Artist" doc:id="ad41fa82-5208-43fe-a097-dd81705b5afd" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEach::Artist: ' ++ write(payload,'application/json')]" category="${logcat}"/>
			<flow-ref doc:name="sr-find-duplicate-artist" doc:id="bff65453-67ad-49e5-aa4a-ead0f628d26c" name="sr-find-duplicate-artist" target="getArtistResponse"/>
			<sps-logger:sps-logger doc:name="Modified Artist" doc:id="6cee4607-2529-4ca6-9923-7bc413f30d48" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEach::Artist: '  ++ write(payload,'application/json')]" category="${logcat}"/>
			<choice doc:name="Artist Found?" doc:id="960be026-b08d-42de-a138-c93d16e1e001" >
				<when expression="#[vars.getArtistResponse.artists[0] == null]">
					<sps-logger:sps-logger doc:name="Modified Artist" doc:id="1729d143-8e22-47ca-8380-bed80c865590" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEachChoice::Artist: ' ++ write(payload,'application/json')]" category="${logcat}"/>
					<flow-ref doc:name="sr-insert-artist" doc:id="2e60cf07-81dd-4228-9dca-320ac564627d" name="sr-insert-artist" target="newArtist" />
					<sps-logger:sps-logger doc:name="Insert Artist" doc:id="15baf900-b4a9-426a-996e-db3ce36889d4" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEachChoice::Artist: ' ++ write(payload,'application/json')]" category="${logcat}"/>
					<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.artistsOut + vars.newArtist]" doc:name="append artistsOut" doc:id="f11e0649-c227-4acd-9765-1108d31ef099" variableName="artistsOut" />
					<sps-logger:sps-logger doc:name="artistOut" doc:id="c7eea557-e5ae-48ae-83aa-28958760105d" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEachChoice::Artist: ' ++ write(vars.artistsOut,'application/json')]" category="${logcat}"/>
				</when>
				<otherwise >
					<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.artistsFound + vars.getArtistResponse.artists[0]]" doc:name="append artistsFound" doc:id="2a5f21b0-a5d5-4b32-bb20-b221a9fa855d" variableName="artistsFound"/>
					<sps-logger:sps-logger doc:name="artistFound" doc:id="2fdefa46-71b7-414d-9725-60e981c2bb20" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::ForEachChoice::Artist: ' ++ write(vars.artistsFound,'application/json')]" category="${logcat}"/>
				</otherwise>
			</choice>
		</foreach>
		<sps-logger:sps-logger doc:name="Artists Payload" doc:id="70d45b60-8eee-4840-9fbb-95b263c63c36" config-ref="SPS_Logger_Config" eventName="BEFORE TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-add-artists::Artist: ' ++ write(payload,'application/json')]" category="${logcat}"/>
		<ee:transform doc:name="add response" doc:id="cde17c30-93f7-4679-b23d-d89ecc1d3bf0">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "statusCode": if(sizeOf(vars.artistsFound) > 0) p('http.add.status.partial') else p('http.add.status.ok'),
    "message":    if(sizeOf(vars.artistsFound) > 0) p('http.add.message.partial') else p('http.add.message.ok'),
    results:{
    	"addedCounts": if(vars.artistsOut[0] == null) "0" else sizeOf(vars.artistsOut),
    	"addedArtists": if(vars.artistsOut[0] == null) "[]" else vars.artistsOut,
    	"duplicatedCounts": if(vars.artistsFound[0] == null) "0" else sizeOf(vars.artistsFound),
		"duplicatedArtists": if(vars.artistsFound[0] == null) "[]" else vars.artistsFound
	}
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="de0aee56-ecfe-4c56-b154-df818dc11d6a" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::END::payload: ' ++ write(payload,'application/json')]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="sr-insert-artist" doc:id="496f94a4-02ae-450d-9fae-ab1c229d73e6">
		<sps-logger:sps-logger doc:name="INFO START" doc:id="1d8becf2-246d-429b-b6f0-cbccdf4d10ad" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::START::payload: '  ++ write(payload,'application/json')]" category="${logcat}" />
		<set-variable value="#[payload.artist]" doc:name="incomingArtist" doc:id="8af73acf-1f54-43f8-bf3b-2929ac644619" variableName="incomingArtist" />
		<try doc:name="Try" doc:id="816e7dc6-980e-4197-b3cb-8388c3eebe69" >
			<sps-logger:sps-logger doc:name="Incoming Artist" doc:id="4d9cc107-2437-44b0-a760-7e731679a807" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::incomingArtist: ' ++ write(vars.incomingArtist,'application/json')]" category="${logcat}"/>
			<db:insert doc:name="Insert Artist" doc:id="d3878c64-6c58-436b-b0e6-41a12a522997" config-ref="mysql-config">
			<db:sql><![CDATA[INSERT INTO bc_artist 
         (artist_id, group_nm, first_nm, last_nm, mi, birth_date, death_date, status_cd) 
         VALUES (NULL, :groupName, :firstName, :lastName, :mi, :birthDate, :deathDate, 'jl')]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    mi: 	  	vars.incomingArtist.mi,
    birthDate: 	vars.incomingArtist.dateOfBirth,
    deathDate: 	vars.incomingArtist.dateOfDeath
}]]]></db:input-parameters>
		</db:insert>
			<sps-logger:sps-logger doc:name="Artist" doc:id="5d9b80fa-983f-46ec-b20e-224b237a9ce9" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::Artist: ' ++ write(payload,'application/json')]" category="${logcat}"/>
			<db:select doc:name="Select Insert" doc:id="be79ff79-2b18-42bd-ba6a-c5595aa8acfa" config-ref="mysql-config" target="newArtistId">
			<db:sql><![CDATA[SELECT MAX(artist_id) AS artist_id from bc_artist
    WHERE group_nm = :groupName 
          AND birth_date = :birthDate 
          AND first_nm = :firstName
          AND last_nm = :lastName
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    birthDate: 	vars.incomingArtist.dateOfBirth
}]]]></db:input-parameters>
		</db:select>
			<sps-logger:sps-logger doc:name="Select Insert" doc:id="e7ae39bd-6e31-4fc8-bb1f-a38459440248" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::Artist: ' ++ write(payload,'application/json')]" category="${logcat}"/>
			<sps-logger:sps-logger doc:name="Update Payload" doc:id="2f7ae89d-e471-4544-8acc-508b8b02f4f3" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::Artist: ' ++ write(payload,'application/json')]" category="${logcat}"/>
			<set-payload value="#[output application/java&#10;var artist = vars.incomingArtist&#10;var newArtistId = vars.newArtistId[0].artist_id default 0&#10;---&#10;{&#10;	artistId: 	newArtistId,&#10;	groupName: 	artist.groupName,&#10;	lastName: 	artist.lastName,&#10;	firstName: 	artist.firstName,&#10;	mi:       	artist.mi,&#10;	dateOfBirth: 	artist.dateOfBirth,&#10;	dateOfDeath:	artist.dateOfDeath&#10;}]" doc:name="Update Payload" doc:id="d08a28bf-1260-4524-bdf1-9f14e01314ed" />
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="501220f3-54e9-43ff-a7da-9249e3f84203" type="DB:QUERY_EXECUTION">
					<sps-logger:sps-logger doc:name="Error" doc:id="a2cd340e-c7bd-46fd-b081-12894f4fa453" config-ref="SPS_Logger_Config" eventName="EXCEPTION" level="ERROR" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::OnErrorPropagate: ' ++ write(payload,'application/json')]" category="${logcat}"/>
				</on-error-propagate>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="c2ce02a5-5b33-4513-be66-4477d0ee0be3" type="EXPRESSION">
					<sps-logger:sps-logger doc:name="Error" doc:id="cf1a219c-5b7e-45b9-b52d-4600c43f7e8b" config-ref="SPS_Logger_Config" eventName="EXCEPTION" level="ERROR" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-insert-artist::Try::OnErrorContinue: ' ++ write(payload,'application/json')]" category="${logcat}"/>
				</on-error-continue>
			</error-handler>
		</try>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="4c97cb39-5c4f-4fee-9ab8-5d89184c141e" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::END::payload: ' ++ write(payload,'application/json')]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="sr-find-duplicate-artist" doc:id="1dce45eb-03d9-45be-8c1f-f15f070e44ac" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="4aea262e-e02d-4bb7-9d86-2149e8ae4564" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-find-duplicate-artist::START::payload: ' ++ write(payload, 'application/json')]" category="${logcat}"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;var artist = payload.artist&#10;---&#10;{&#10;    groupName: 	artist.groupName,&#10;    firstName: 	artist.firstName,&#10;    lastName:     artist.lastName,&#10;    dateOfBirth:  artist.dateOfBirth&#10;}]" doc:name="queryParamList" doc:id="f1c7311a-fd9b-4d65-a551-d74e79e75cb1" variableName="queryParamList"/>
		<sps-logger:sps-logger doc:name="queryParamList" doc:id="b39c5a66-4881-4009-a8bf-c4acb67d9cba" config-ref="SPS_Logger_Config" level="DEBUG" message="#['sr-find-duplicate-artist::VAR::queryParamList: ' ++ write(vars.queryParamList,'application/json')]" correlationId="#[vars.headerAttributes.correlationId]" category="${logcat}"/>
		<flow-ref doc:name="sr-select-artists" doc:id="b9189584-4fc9-4abc-acdf-5ed20b541086" name="sr-select-artists"/>
		<sps-logger:sps-logger doc:name="INFO sizeOf" doc:id="d89e8126-0f08-4567-9c17-1e86f1c445b6" config-ref="SPS_Logger_Config" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-find-duplicate-artist::SizeOfPayload: ' ++ sizeOf(payload.artists)]" category="${logcat}"/>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="055c09f1-51a7-4c57-8636-a2d08245639a" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-find-duplicate-artist::END::payload: '  ++ write(payload,'application/json')]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="impl-update-artist-urls" doc:id="3436bc84-1e3c-4c66-91e1-60976e4fcb53" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="321334e6-ad32-479a-9a2e-766d52b74eb8" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::START::payload: '  ++ write(payload,'application/json')]" category="${logcat}" />
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;{&#10;	method: p('last.fm.method'),&#10;	apiKey: p('last.fm.api.key'),&#10;	format: p('last.fm.format'),&#10;	artist: payload.groupName&#10;}]" doc:name="lastFmProperties" doc:id="49451b19-91db-44c1-99cb-3bacec44f87f" variableName="lastFmProperties"/>
		<sps-logger:sps-logger doc:name="lastFmProperties" doc:id="aacb6d17-3213-4d07-8b89-a8b862e4b247" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Var::lastFmProperties: ' ++ write(vars.lastFmProperties,'application/json')]" category="${logcat}" />
		<flow-ref doc:name="sr-get-artist-info" doc:id="c13e5a7c-156d-456f-86b9-7fc8609d5044" name="sr-get-artist-info" target="lastFmResponse"/>
		<sps-logger:sps-logger doc:name="Artist Info" doc:id="4a01b0f7-0e67-498d-9037-5545927a9aa8" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::payload: ' ++ write(payload,'application/json')]" category="${logcat}"/>
		<choice doc:name="Artist Found?" doc:id="5f3eea9f-da5b-41c1-8fd0-8478ccdb1dc5" >
			<when expression='#[vars.lastFmResponse.statusCode == "201"]'>
				<sps-logger:sps-logger doc:name="Artist" doc:id="46a6eaa3-41a5-4b0c-912a-4817bfddeb67" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Choice::payload: ' ++ write(payload,'application/json')]" category="${logcat}"/>
				<flow-ref doc:name="sr-patch-artist" doc:id="88749f85-e1c9-451c-9652-75f2f49c1294" name="sr-patch-artist"/>
				<sps-logger:sps-logger doc:name="Patch Artist" doc:id="8c115596-dc7c-4be3-b4e6-fd175436f66a" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Choice::payload: ' ++ write(payload,'application/json')]" category="${logcat}"/>
			</when>
			<otherwise >
				<sps-logger:sps-logger doc:name="Artist" doc:id="8d27b39e-79fb-4937-bb6c-ae2522c4dd6c" config-ref="SPS_Logger_Config" eventName="BEFORE TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Choice::payload: ' ++ write(payload,'application/json')]" category="${logcat}"/>
				<ee:transform doc:name="NOT FOUND response" doc:id="50c32efb-2c7d-41c9-8e65-353233e13c0d" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.lastFmResponse]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<sps-logger:sps-logger doc:name="Not Found" doc:id="c49814ab-c59d-45cf-8e7c-a9436838ea5a" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['impl-update-artist-urls::Choice::payload: ' ++ write(payload,'application/json')]" category="${logcat}"/>
			</otherwise>
		</choice>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="08e3f110-4e7d-4650-a147-ba1e95b63eca" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::END::payload: ' ++ write(payload,'application/json')]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="sr-get-artist-info" doc:id="7c3b8fbc-c2c8-4b29-949a-d6e15385300e" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="0a34ae51-3e6d-4f19-bfe5-a5b07d7769ab" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::START::payload: '  ++ write(payload,'application/json')]" category="${logcat}" />
		<http:request method="GET" doc:name="Get Artist Bio" doc:id="6d7af17d-17e4-46ad-b794-ad6500144d9b" config-ref="last-fm-http-config" path="/${last.fm.version}">
			<http:query-params><![CDATA[#[{
	"method": vars.lastFmProperties.method,
	"api_key": vars.lastFmProperties.apiKey,
	"artist": vars.lastFmProperties.artist,
	"format": vars.lastFmProperties.format
}]]]></http:query-params>
		</http:request>
		<sps-logger:sps-logger doc:name="Artist Bio" doc:id="ce802a57-d689-463b-9b14-03260c1af97e" config-ref="SPS_Logger_Config" targetSystem="${last.fm.host}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-get-artist-info::Request::payload: ' ++ write(payload,'application/json')]" statusCode="#[if(payload.artist.bio.content==null) p('http.get.status.nf') else p('http.get.status.ok')]" category="${logcat}"/>
		<ee:transform doc:name="response" doc:id="cc00efbb-685d-4ead-9e17-2f7e0cd81e37">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
var NOT_FOUND_STATUS = p('http.patch.status.nf')
var NOT_FOUND_MESSAGE = p('http.patch.message.nf')
var FOUND_STATUS = p('http.patch.status.ok')
var FOUND_MESSAGE = p('http.patch.message.ok')
---
{
	statusCode: if(payload.artist.bio.content == null) (NOT_FOUND_STATUS) else (FOUND_STATUS),
	message: if(payload.artist.bio.content == null) (NOT_FOUND_MESSAGE) else (FOUND_MESSAGE),
	bioUrl: if(payload.artist.bio.content != null) (	payload.artist.bio.links.link.href)  else (NOT_FOUND_MESSAGE)
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="84459cd4-1ce0-4257-abc9-237727e2eba2" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::END::payload: ' ++ write(payload,'application/json')]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="sr-patch-artist" doc:id="fbd4c8e9-640d-41ef-a23c-6d9e3b37a6fd" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="f3cb84af-4dd8-4660-a34f-27bfba131831" config-ref="SPS_Logger_Config" eventName="START" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::START::payload: '  ++ write(payload,'application/json')]" category="${logcat}" />
		<set-variable value="#[vars.lastFmResponse.bioUrl]" doc:name="bioUrl" doc:id="b4a1d08e-50a9-4400-9ac1-8fbdc26eb00d" variableName="bioUrl"/>
		<sps-logger:sps-logger doc:name="bioUrl" doc:id="0fb075e5-e726-4ffb-b23e-14620b49a758" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="BEFORE REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-patch-artist::Update::payload: ' ++ write(vars.bioUrl,'application/json')]" category="${logcat}"/>
		<db:update doc:name="Update artist" doc:id="d04afd68-9556-4520-ba45-9c468d6e2637" config-ref="mysql-config">
			<db:sql ><![CDATA[UPDATE bc_artist
  SET bio_url = :bioUrl
  WHERE group_nm = :groupName
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bioUrl: vars.bioUrl,
	groupName: vars.lastFmProperties.artist
}]]]></db:input-parameters>
		</db:update>
		<sps-logger:sps-logger doc:name="Update Artist" doc:id="4c481774-eb81-4f00-98ad-aed4727898f3" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" correlationId="#[vars.headerAttributes.correlationId]" message="#['sr-patch-artist::Update::payload: ' ++ write(payload,'application/json')]" category="${logcat}"/>
		<set-payload value="#[%dw 2.0&#10;output application/json&#10;var FOUND_STATUS = p('http.get.status.ok')&#10;var FOUND_MESSAGE = p('http.get.message.ok')&#10;---&#10;{&#10;	statusCode: FOUND_STATUS,&#10;	message: FOUND_MESSAGE,&#10;	bioUrl: vars.bioUrl,&#10;	recordsUpdated: payload.affectedRows&#10;}]" doc:name="Set Payload" doc:id="9d69badc-f6cf-475a-89f4-9320fb04827f" />
		<sps-logger:sps-logger doc:name="INFO END" doc:id="1e3bed2f-a8aa-4daf-874f-b657c96e3222" config-ref="SPS_Logger_Config" eventName="END" correlationId="#[vars.headerAttributes.correlationId]" message="#['subflow-name::END::payload: ' ++ write(payload,'application/json')]" category="${logcat}"/>
	</sub-flow>
</mule>
